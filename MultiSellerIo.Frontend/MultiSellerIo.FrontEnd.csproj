<Project ToolsVersion="15.0" Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <IsPackable>false</IsPackable>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="2.0.0" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.0.0" />
  </ItemGroup>
  <ItemGroup>
    <!-- Files not to show in IDE -->
    <None Remove="ClientApp\api\index.ts" />
    <None Remove="ClientApp\api\user\index.ts" />
    <None Remove="ClientApp\components\account\login.tsx" />
    <None Remove="ClientApp\components\shared\util\alert.tsx" />
    <None Remove="ClientApp\components\shared\util\form-components.tsx" />
    <None Remove="ClientApp\types\actions\account-constants.ts" />
    <None Remove="yarn.lock" />

    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->
    <Content Remove="ClientApp\**" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\MultiSellerIo.Common\MultiSellerIo.Common.csproj" />
    <ProjectReference Include="..\MultiSellerIo.Core\MultiSellerIo.Core.csproj" />
    <ProjectReference Include="..\MultiSellerIo.Intergrations.Azure\MultiSellerIo.Intergrations.Azure.csproj" />
    <ProjectReference Include="..\MultiSellerIo.Services\MultiSellerIo.Services.csproj" />
  </ItemGroup>
  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\api\index.ts" />
    <TypeScriptCompile Include="ClientApp\api\user\index.ts" />
    <TypeScriptCompile Include="ClientApp\components\account\login\index.tsx" />
    <TypeScriptCompile Include="ClientApp\components\shared\util\alert.tsx" />
    <TypeScriptCompile Include="ClientApp\components\shared\util\form-components.tsx" />
    <TypeScriptCompile Include="ClientApp\types\actions\account-constants.ts" />
    <TypeScriptCompile Include="ClientApp\util\cookies\index.ts" />
  </ItemGroup>
  <Target Name="RunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js --env.prod" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\assets\**; ClientApp\assets\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>